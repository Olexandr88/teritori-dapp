/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  config: Config;
  [k: string]: unknown;
}
export interface Config {
  name: string;
  nft_code_id?: number | null;
  supported_networks: string[];
}
export type ExecuteMsg = {
  update_config: {
    changes: Config;
    [k: string]: unknown;
  };
} | {
  submit_collection: {
    collection: Collection;
    [k: string]: unknown;
  };
} | {
  update_merkle_root: {
    collection_id: number;
    merkle_root: string;
    [k: string]: unknown;
  };
} | {
  deploy_collection: {
    collection_id: number;
    [k: string]: unknown;
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type Addr = string;
export interface Collection {
  artwork_desc: string;
  base_token_uri?: string | null;
  contact_discord_name: string;
  contact_email: string;
  cover_img_uri: string;
  dao_whitelist_count: number;
  deployed_address?: string | null;
  desc: string;
  dox_state: string;
  escrow_mint_proceeds_period: Timestamp;
  expected_mint_date: Timestamp;
  expected_public_mint_price: number;
  expected_supply: number;
  external_link?: string | null;
  invested_amount: number;
  investment_link: string;
  is_applied_previously: boolean;
  is_project_derivative: boolean;
  is_ready_for_mint: boolean;
  limit_per_address: number;
  merkle_root?: string | null;
  name: string;
  partners: string;
  project_desc: string;
  project_type: string;
  roadmap_link: string;
  royalty_address?: Addr | null;
  royalty_percentage?: number | null;
  start_time: Timestamp;
  symbol: string;
  target_network: string;
  team_desc: string;
  team_link: string;
  tokens_count: number;
  twitter_followers_count: number;
  twitter_profile: string;
  unit_price: number;
  website_link?: string | null;
  whitelist_addresses: string[];
  whitelist_end_time: Timestamp;
  whitelist_limit_per_address: string;
  whitelist_member_limit: number;
  whitelist_start_time: Timestamp;
  whitelist_unit_price: number;
  whitepaper_link: string;
}
export type QueryMsg = {
  get_collection_by_id: {
    collection_id: number;
    [k: string]: unknown;
  };
} | {
  get_collection_by_addr: {
    collection_addr: string;
    [k: string]: unknown;
  };
} | {
  get_config: {
    [k: string]: unknown;
  };
};