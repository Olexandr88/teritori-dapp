syntax = "proto3";

package launchpad.v1;
option go_package = "./launchpadpb";

service LaunchpadService {
  rpc UploadMetadata(UploadMetadataRequest) returns (UploadMetadataResponse);
}

message UploadMetadataRequest {
  string user = 1;
  uint32 project_id = 2;
  string network_id = 3;
  repeated Metadata metadatas = 4;
}

message UploadMetadataResponse {
  bool result = 1;
}

message Metadata {
  string image = 1;
  string image_data = 2;
  string external_url = 3;
  string description = 4;
  string name = 5;
  repeated Trait attributes = 6;
  string background_color = 7;
  string animation_url = 8;
  string youtube_url = 9;
  uint64 royalty_percentage = 10;
  string royalty_payment_address = 11;
}

message Trait {
  string display_type = 1;
  string trait_type = 2;
  string value = 3;
}


message Collection {
  // Collection info ----------------------------
  string name = 1;
  string desc = 2;
  string symbol = 3;
  string cover_img_uri = 4;
  string target_network = 5;
  string external_link = 6;

  // Collection details ----------------------------
  string website_link = 7;

  string twitter_profile = 8;
  uint64 twitter_followers_count = 9;

  string contact_discord_name = 10;
  string contact_email = 11;

  bool is_project_derivative = 12;

  string project_type = 13;
  string project_desc = 14;

  bool is_applied_previously = 15;

  // Team info --------------------------------------
  string team_desc = 16;
  string team_link = 17;

  string partners = 18;

  uint64 invested_amount = 19;
  string investment_link = 20;

  string whitepaper_link = 21;
  string roadmap_link = 22;

  // Additional info ----------------------------
  string artwork_desc = 23;

  bool is_ready_for_mint = 24;

  uint32 expected_supply = 25;
  uint64 expected_public_mint_price = 26;
  uint64 expected_mint_date = 27;

  uint64 escrow_mint_proceeds_period = 28;
  string dox_state = 29;

  uint32 dao_whitelist_count = 30;

  // Minting details ----------------------------
  uint32 tokens_count = 31;
  uint64 unit_price = 32;
  uint32 limit_per_address = 33;
  uint64 start_time = 34;

  // Whitelist minting --------------------------
  repeated string whitelist_addresses = 35;

  uint64 whitelist_unit_price = 36;
  string whitelist_limit_per_address = 37;
  uint32 whitelist_member_limit = 38;
  uint64 whitelist_start_time = 39;
  uint64 whitelist_end_time = 40;

  // Royalty --------------------------
  string royalty_address = 41;
  uint32 royalty_percentage = 42;

  // Extend info --------------------------
  string base_token_uri = 43;
  string merkle_root = 44;
  string deployed_address = 45;
}